---
lang: ru
title: "МастерСлух"
date: today
date-format:  D dddd MMM YYYY
editor_options: 
  chunk_output_type: console
navbar:
  left:
    - href: index.qmd
      text: "О проекте"
execute:
  warning: false
  message: false
  error: false
  echo: false
  output: asis
---

```{r}

# загрузка библиотек
library(ryandexdirect)
library(tidyverse)
library(scales)
library(kableExtra)
library(ggrepel)
library(reactable)

```


```{r, include = F, eval = F}

# запрос данных Директ API
acc_raw_data <- yadirGetReport(ReportType        = "CUSTOM_REPORT",
                               DateRangeType     = "CUSTOM_DATE",
                               DateFrom          = "2023-06-01",
                               DateTo            = Sys.Date() - 1,
                               FieldNames        = c("Date",
                                                     "AdNetworkType",
                                                     "CampaignName",
                                                     "CampaignType",
                                                     "AdGroupName",
                                                     "WeightedImpressions",
                                                     "Clicks",
                                                     "Sessions",
                                                     "Bounces",
                                                     "Cost",
                                                     "Conversions"),
                               Goals             = c(301649121,
                                                     301314275,
                                                     301313194,
                                                     301315472),
                               AttributionModels = c("FCCD", "AUTO"),
                               IncludeVAT        = "NO",
                               IncludeDiscount   = "NO",
                               AgencyAccount     = "platzkart.ru-e2",
                               Login             = "e-17332282",
                               TokenPath         = "direct_token")
```


```{r temp1, include = FALSE, eval = F}

# временный код для сокращения времени рендера
vroom::vroom_write(x      = acc_raw_data, 
                   file   = "~/GitHub/BI/data/mc_yd_acc_raw_data.txt", 
                   delim  = ",",
                   append = FALSE)

```


```{r temp2}

# загрузка данных
acc_raw_data <- vroom::vroom(file = "~/GitHub/BI/data/mc_yd_acc_raw_data.txt")

```


```{r}

# подготовим данные к анализу
## задаем вектор имен
mc_names <- c("Calls_F", 
              "Calls_A", 
              "B24_F", 
              "B24_A", 
              "Forms_F", 
              "Forms_A", 
              "EMails_F", 
              "EMails_A")

## обработаем данные по целям
account <- acc_raw_data %>%
  mutate(across(c(11:ncol(.)), ~ ifelse(. == "--", 0, .)),
         across(c(11:ncol(.)), as.numeric)) %>%
  rename_at(vars(11:ncol(.)), ~ mc_names) %>%
  mutate(GoalsFC = rowSums(across(ends_with("_F"), ~abs(.x))),
         GoalsLC = rowSums(across(ends_with("_A"), ~abs(.x))))

```

## Данные по аккаунту

:::: {.panel-tabset}

## Табличные сводки

::: {.panel-tabset}

### Срез по аккаунту

```{r}

# создаем таблицу и выводим как html
account %>%
  reframe(across(where(is.numeric),sum)) %>% 
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  kbl(caption = "Таблица: Сводка по всему аккаунту", 
      align = "c") %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"), 
                fixed_thead = TRUE) %>% 
  row_spec(0, background = "#DBB9FA", color = "#5A5A5A")

```



### Площадки

- AD_... — показы баннеров с нашим предложением на сайтах, где был пользователь
- SEARCH — показы в поисковой сети

```{r}

# создаем таблицу и выводим как html
acc_net_type <- account %>%
  reframe(across(where(is.numeric),sum), .by = AdNetworkType) %>% 
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(AdNetworkType,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`)

acc_net_type %>% 
  kbl(format = "html",
      caption = "Табилца: Сводка по всему аккаунту в разрезе мест показа") %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive")) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A",
           align = "r") %>%
  row_spec(1:length(acc_net_type$AdNetworkType),
           align = "r") %>%
  column_spec(1,
              border_right = T)

```



### Месяцы

```{r}

# создаем таблицу
acc_month <- account %>% 
  reframe(round(across(where(is.numeric), sum)), 0, .by = Date ) %>% 
  mutate(Month = clock::date_format(Date, format = "%m-%y")) %>%
  reframe(across(where(is.numeric), sum),
          Days = n(),
          .by = Month) %>% 
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(Month,
         Days,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`)

# задаем стиль выбранных колонок
acc_month[, c(3,4,5)] <- lapply(acc_month[, c(3,4,5)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                 })

# выводим как html
acc_month %>% 
  kbl(format = "html",
      escape = FALSE,
      caption = "Таблица: Сводка по месяцам", 
      align = "c") %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive")) %>% 
  column_spec(c(2,5), 
              border_right = TRUE) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A")

```

:::

## Графики

::: {.panel-tabset}


### Месяцы

```{r}
#| fig-cap: "График показов, кликов и целей в лог шкале по месяцам"

account %>% 
  mutate(Month = floor_date(Date, "month", week_start = 1)) %>% 
  reframe(across(where(is.numeric), sum), .by = Month) %>% 
  select(Month, 
         WeightedImpressions,
         Clicks,
         GoalsLC) %>% 
  ggplot() +
  geom_area(mapping = aes(x = Month, 
                          y = WeightedImpressions, 
                          fill = "wImp"), alpha = 0.5)+
  geom_area(mapping = aes(x = Month, 
                          y = Clicks, 
                          fill = "Clicks"), alpha = 0.5)+
  geom_area(mapping = aes(x = Month, 
                          y = GoalsLC, 
                          fill = "GoalsLC"))+
  scale_fill_manual(values = c("#00E5FF","#B3FFFF","#FF80FF"))+
  scale_x_date(date_breaks = "month", date_labels = "%b")+
  scale_y_log10(labels = label_number_auto()) +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        panel.grid = element_blank())
```


### Недели

```{r}
#| fig-cap: "График показов, кликов и целей в лог шкале по неделям"

account %>% 
  mutate(Week = floor_date(Date, "week", week_start = 1)) %>% 
  reframe(across(where(is.numeric), sum), .by = Week) %>% 
  select(Week, 
         WeightedImpressions,
         Clicks,
         GoalsLC) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Week, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Week, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Week, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Week, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Week, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Week, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "week", date_labels = "%W")+
  scale_y_log10(labels = label_number_auto()) +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        panel.grid = element_blank())

```



### Дни

```{r}
#| fig-cap: "Тренд показов, кликов и целей в лог шкале по дням"

account %>% 
  reframe(across(where(is.numeric), sum), .by = Date) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Date, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Date, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Date, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Date, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_vline(xintercept = as.Date("2023-07-24"), linetype = 2, color = "red")+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "day", date_labels = "%d")+
  scale_y_log10() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        panel.grid = element_blank())+
  geom_label_repel(aes(x = as.Date("2023-07-24"), y = 0,
                label = "24 Июль. \n Вкл стратегия по конверсиям"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 5, 
            label.padding = 0.5, 
            direction = "x")

```


### Bar chart

```{r}
#| fig-cap: "График: показы, клики и целей в столбчатой диаграмме по неделям"

account %>% 
  mutate(Week = floor_date(Date, "week", week_start = 1)) %>% 
  reframe(across(where(is.numeric), sum), .by = Week) %>% 
  select(Week, 
         WeightedImpressions,
         Clicks,
         GoalsLC) %>%  
  ggplot() +
  geom_col(mapping = aes(x = Week, y = WeightedImpressions, fill = "wImp"))+
  geom_col(mapping = aes(x = Week, y = Clicks, fill = "Clicks"))+
  geom_col(mapping = aes(x = Week, y = GoalsLC, fill = "Goals"))+
  scale_fill_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "week", date_labels = "%W")+
  scale_y_log10(labels = label_number_auto())+
  theme_minimal()+
  labs(x = "Номер недели", 
       y = NULL)+
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        panel.grid = element_blank())+
  geom_label_repel(aes(x = as.Date("2023-07-24"), y = 0,
                label = "24 Июль. \n Вкл стратегия по конверсиям"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 2)

```


### 7 дней

```{r}
#| fig-cap: "График показов, кликов и целей за последние 7 дней"

account %>% 
  reframe(across(where(is.numeric), sum), .by = Date) %>% 
  filter(Date >= Sys.Date()-8) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Date, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Date, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Date, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Date, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_vline(xintercept = as.Date("2023-03-06"), linetype = 2, color = "red")+
  geom_vline(xintercept = as.Date("2023-06-08"), linetype = 2, color = "red")+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "day", date_labels = "%d %a")+
  scale_y_log10() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title    = element_blank(),
        legend.text     = element_text(size = 10, color = "gray50"),
        axis.title      = element_text(size = 10, color = "gray40"),
        axis.text       = element_text(size = 10, color = "gray40"))

```


### 30 дней

```{r}
#| fig-cap: "График показов, кликов и целей за последние 30 дней"

account %>% 
  reframe(across(where(is.numeric), sum), .by = Date) %>% 
  filter(Date >= Sys.Date()-31) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Date, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Date, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Date, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Date, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_vline(xintercept = as.Date("2023-03-06"), linetype = 2, color = "red")+
  geom_vline(xintercept = as.Date("2023-06-08"), linetype = 2, color = "red")+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "day", date_labels = "%d")+
  scale_y_log10() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 7, color = "gray40"))

```

:::

::::


## Данные по рекламным кампаниям

::: {.panel-tabset}

### Срез по РК

```{r}

camps <- account %>% 
  reframe(across(where(is.numeric), sum), .by = c(CampaignName, CampaignType)) %>%
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(CampaignType,
         CampaignName,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  arrange(CampaignType, desc(Cost))

# задаем стиль выбранных колонок
camps[, c(3,4,5)] <- lapply(camps[, c(3,4,5)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                   })

camps %>% 
  kbl(format = "html",
      caption = "Таблица: Сводка по РК за весь период", 
      escape = F) %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"),
                full_width = F) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A",
           align = "r") %>%
  row_spec(1:length(camps$CampaignType),
           align = "r") %>%
  column_spec(c(2,5),
              border_right = T)

```


### РК по Месяцам

```{r}

camp_month <- account %>% 
  reframe(round(across(where(is.numeric), sum)), 
          .by = c(Date, CampaignName)) %>% 
  mutate(Month = clock::date_format(Date, format = "%m-%y")) %>%
  reframe(round(across(where(is.numeric), sum)),
          Days = n(),
          .by = c(Month, CampaignName)) %>%
  mutate(Campaign  = CampaignName,
         Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(Month,
         Days,
         Campaign,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`)

# задаем стиль выбранных колонок
camp_month[, c(4,5,6)] <- lapply(camp_month[, c(4,5,6)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                   })

camp_month %>% 
  kbl(format = "html",
      caption = "Таблица: Сводка по РК в разрезе месяцев", 
      escape = F) %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"),
                full_width = F) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A",
           align = "r") %>%
  row_spec(1:length(camp_month$Month),
           align = "r") %>%
  column_spec(c(3,6),
              border_right = T)

```


### Группы

```{r}

camp_groups <- account %>% 
  reframe(round(across(where(is.numeric), sum)), 
          .by = c(CampaignName, AdGroupName, AdNetworkType)) %>%
  mutate(Campaign  = CampaignName,
         Group     = AdGroupName,
         NetType   = AdNetworkType,
         Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(NetType,
         Campaign,
         Group,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  arrange(Campaign, desc(Cost))

# задаем стиль выбранных колонок
camp_groups[, c(4,5,6)] <- lapply(camp_groups[, c(4,5,6)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                   })


camp_groups %>% 
  kbl(format = "html",
      caption = "Метрики по РК, группам, типу площадки",
      escape = F) %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", 
                                      "condensed", 
                                      "responsive"),
                full_width = F, 
                fixed_thead = T) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A",
           font_size = 16) %>% 
  row_spec(1:length(camp_groups$Campaign),
           align = "r",
           font_size = 14) %>%
  column_spec(c(3, 6),
              border_right = T) %>% 
  scroll_box(height = "500px",
             fixed_thead = T)


```


:::


## Объявления

:::: {.panel-tabset}

Рассмотрим данные по объявлениям из действущхи РК.

```{r, include = F, eval = F}

# запрос данных Директ API
ads_raw_data <- yadirGetReport(ReportType        = "CUSTOM_REPORT",
                               DateRangeType     = "CUSTOM_DATE",
                               DateFrom          = "2023-06-01",
                               DateTo            = Sys.Date() - 1,
                               FieldNames        = c("Date",
                                                     "AdNetworkType",
                                                     "CampaignName",
                                                     "AdFormat",
                                                     "Slot",
                                                     "WeightedImpressions",
                                                     "Clicks",
                                                     "Sessions",
                                                     "Bounces",
                                                     "Cost",
                                                     "Conversions"),
                               Goals             = c(301649121,
                                                     301314275,
                                                     301313194,
                                                     301315472),
                               AttributionModels = c("FCCD", "AUTO"),
                               IncludeVAT        = "NO",
                               IncludeDiscount   = "NO",
                               AgencyAccount     = "platzkart.ru-e2",
                               Login             = "e-17332282",
                               TokenPath         = "direct_token")
```


```{r temp3, include = FALSE, eval = F}

# временный код для сокращения времени рендера
vroom::vroom_write(x      = ads_raw_data, 
                   file   = "~/GitHub/BI/data/mc_yd_ads_raw_data.txt", 
                   delim  = ",",
                   append = FALSE)

```


```{r temp4}

# загрузка данных
ads_raw_data <- vroom::vroom(file = "~/GitHub/BI/data/mc_yd_ads_raw_data.txt")

```


```{r}

# подготовим данные к анализу
## задаем вектор имен
mc_names <- c("Calls_F", 
              "Calls_A", 
              "B24_F", 
              "B24_A", 
              "Forms_F", 
              "Forms_A", 
              "EMails_F", 
              "EMails_A")

## обработаем данные по целям
ads <- ads_raw_data %>%
  mutate(across(c(11:ncol(.)), ~ ifelse(. == "--", 0, .)),
         across(c(11:ncol(.)), as.numeric)) %>%
  rename_at(vars(11:ncol(.)), ~ mc_names) %>%
  mutate(GoalsFC = rowSums(across(ends_with("_F"), ~abs(.x))),
         GoalsLC = rowSums(across(ends_with("_A"), ~abs(.x))))

```


### Форматы

::: {layout-ncol=2}

```{r}
#| fig-cap: "Показы по типу формата объявлений за последние 30 дней"

ads %>% 
  filter(Date >= Sys.Date()-31) %>% 
  reframe(round(across(where(is.numeric), sum)), .by =c(CampaignName, AdFormat)) %>%
  ggplot()+
  geom_col(aes(x = CampaignName, y = WeightedImpressions, fill = AdFormat),
           position = "dodge")+
  scale_fill_manual(values = c("#19a6b3","#f26c0d","#5e3894"))+
  scale_y_log10()+
  theme_minimal()+
  theme(legend.position = "top",
        legend.title = element_text(size = 12, color = "gray50"),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        axis.text.x = element_text(angle = 90))+
  labs(x = "Кампании",
       y = "Показы")

```


```{r}
#| fig-cap: "Клики по типу формата за последние 30 дней"

ads %>% 
  filter(Date >= Sys.Date()-31) %>% 
  reframe(round(across(where(is.numeric), sum)), .by =c(CampaignName, AdFormat)) %>%
  ggplot()+
  geom_col(aes(x = CampaignName, y = Clicks, fill = AdFormat),
           position = "dodge")+
  scale_fill_manual(values = c("#19a6b3","#f26c0d","#5e3894"))+
  theme_minimal()+
  theme(legend.position = "top",
        legend.title = element_text(size = 12, color = "gray50"),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        axis.text.x = element_text(angle = 90))+
  labs(x = "Кампании",
       y = "Клики")

```

:::

```{r}

formats <- ads %>% 
  reframe(round(across(where(is.numeric), sum)), 
          .by = c(AdNetworkType, CampaignName, AdFormat)) %>%
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(CampaignName,
         AdNetworkType,
         AdFormat,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  arrange(CampaignName, desc(Cost)) 

# задаем стиль выбранных колонок
formats[, c(4,5,6)] <- lapply(formats[, c(4,5,6)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                   })

formats %>% 
  kbl(format = "html",
      caption = "Метрики по РК, площадкам и форматам",
      escape = F) %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"), 
                fixed_thead = TRUE) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A", 
           font_size = 16) %>% 
  row_spec(1:length(formats$CampaignName),
           align = "r",
           font_size = 14) %>%
  column_spec(c(3, 6),
              border_right = T)
  
```


### Слоты

::: {layout-ncol=2}

```{r}
#| fig-cap: "Показы объявлений в блоках"

ads %>% 
  filter(Date >= Sys.Date()-31) %>% 
  reframe(round(across(where(is.numeric), sum)), .by =c(CampaignName, Slot)) %>%
  ggplot()+
  geom_col(aes(x = CampaignName, y = WeightedImpressions, fill = Slot),
           position = "dodge")+
  scale_fill_manual(values = c("#19a6b3","#f26c0d","#5e3894", "#FF00FF","#8F989B"))+
  scale_y_log10()+
  labs(x = NULL,
       y = "Imp")+
  theme_minimal()+
  theme(legend.position = "top",
        legend.title = element_text(size = 12, color = "gray50"),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        axis.text.x = element_text(angle = 90))+
  labs(x = "Кампании",
       y = "Показы")

```


```{r}
#| fig-cap: "Клики по объявлениям в блоках"

ads %>% 
  filter(Date >= Sys.Date()-31) %>% 
  reframe(round(across(where(is.numeric), sum)), .by =c(CampaignName, Slot)) %>%
 
  ggplot()+
  geom_col(aes(x = CampaignName, y = Clicks, fill = Slot),
           position = "dodge")+
  scale_fill_manual(values = c("#19a6b3","#f26c0d","#5e3894", "#FF00FF", "#8F989B"))+
  labs(x = NULL,
       y = "Clicks")+
  theme_minimal()+
  theme(legend.position = "top",
        legend.title = element_text(size = 12, color = "gray50"),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        axis.text.x = element_text(angle = 90))+
  labs(x = "Кампании",
       y = "Клики")

```


:::


```{r}

slots <- ads %>% 
  reframe(round(across(where(is.numeric), sum)), 
          .by = c(AdNetworkType, CampaignName, Slot)) %>%
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(CampaignName,
         AdNetworkType,
         Slot,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  arrange(CampaignName, desc(Cost))

# задаем стиль выбранных колонок
slots[, c(4,5,6)] <- lapply(slots[, c(4,5,6)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                   })

slots %>% 
  kbl(format = "html", 
      caption = "Метрики по РК, типу площадки и блоку показа объявления", 
      escape = F) %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"), 
                fixed_thead = TRUE) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A", 
           font_size = 16) %>% 
  row_spec(1:length(slots$CampaignName),
           align = "r",
           font_size = 14) %>%
  column_spec(c(3, 6),
              border_right = T) %>%
  scroll_box(height = "500px", 
             fixed_thead = T)
  

```

::::




```{r, include = F, eval = F}

# Примеры таблиц которые могут пригодится
# сравним периоды

last30_days <- last30_days |> 
  mutate(CampaignId = as.character(CampaignId)) |> 
  add_row(CampaignId = 'Последние 30 дней', .before = 1)

last7_days <- last7_days |> 
  mutate(CampaignId = as.character(CampaignId)) |> 
  add_row(CampaignId = 'Последние 7 дней', .before = 1)

periods <- bind_rows(last30_days, last7_days)


(daysDif <- df %>%
  summarise(round(across(where(is.numeric), sum)), 0, .by = Date) %>%
  mutate(CTR     = round(Clicks / Impressions * 100, 2),
         CPA     = round(ifelse(Cost == 0 | LYDC == 0, 0, Cost / LYDC)),
         ctrD    = round(-(lag(CTR) - CTR) / CTR, 2),
         costD   = round(-(lag(Cost) - Cost) / Cost, 2),
         cpaD    = round(-(lag(CPA) - CPA) / CPA, 2),
         convD   = round(-(lag(LYDC) - LYDC) / LYDC, 2),
         clicksD = round(-(lag(Clicks) - Clicks) / Clicks, 2),
         impD    = round(-(lag(Impressions) - Impressions) / Impressions, 2))%>%
  select(Date, Cost, costD, LYDC, convD, CPA, cpaD, Clicks, clicksD, CTR, ctrD, Impressions, impD) %>%
  ## replace inf and NaN
  mutate(convD = ifelse(is.infinite(convD), -1, ifelse(is.nan(convD), 0, convD)), 
         cpaD  = ifelse(is.infinite(cpaD), -1, ifelse(is.nan(cpaD), 0, cpaD)))
 )


```

