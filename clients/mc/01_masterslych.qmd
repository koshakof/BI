---
title: "МастерСлух"
date: today
date-format:  D dddd MMM YYYY
editor_options: 
  chunk_output_type: console
execute:
  warning: false
  message: false
  error: false
  echo: false
  output: asis
---

```{r}
# загрузка библиотек
library(tidyverse)
library(scales)
library(kableExtra)
library(ggrepel)
library(reactable)
library(DT)
```


```{r}
# загрузка данных
account <- vroom::vroom(file = "~/GitHub/BI/clients/mc/data/account.txt")
```


## Данные по аккаунту

:::: {.panel-tabset}

## Табличные сводки

::: {.panel-tabset}

### Срез по аккаунту

```{r}

# создаем таблицу и выводим как html
account  |> 
  reframe(across(where(is.numeric),sum)) |> 
  mutate(
    Cost      = round(Cost),
    wImp      = round(WeightedImpressions),
    BR    = if_else(Bounces == 0| Sessions == 0, 0, round(Bounces / Sessions * 100)),
    wCTR  = if_else(Clicks == 0| WeightedImpressions == 0, 0, round(Clicks / WeightedImpressions * 100, 2)),
    cpaFC = if_else(Cost == 0| GoalsFC == 0, 0, round(Cost / GoalsFC)),
    cpaLC = if_else(Cost == 0| GoalsLC == 0, 0, round(Cost / GoalsLC)),
    CPC   = if_else(Cost == 0| Clicks == 0, 0, round(Cost / Clicks)),
    crFC  = if_else(Clicks == 0| GoalsFC == 0, 0, round(GoalsFC/ Clicks * 100, 2)),
    crLC  = if_else(Clicks == 0| GoalsLC == 0, 0, round(GoalsLC / Clicks * 100, 2))
    ) |> 
  select(
    Cost,
    GoalsFC,
    GoalsLC,
    cpaFC,
    cpaLC,
    crFC,
    crLC,
    Clicks,
    CPC,
    wCTR,
    BR
    ) |> 
  kbl(
    caption = "Таблица: Сводка по всему аккаунту",
    align = "c"
    ) |> 
  kable_paper() |> 
  kable_styling(
    bootstrap_options = c("hover", "condensed", "responsive"), 
    fixed_thead = TRUE
    ) |> 
  row_spec(0, background = "#DBB9FA", color = "#5A5A5A")
```



### Площадки

- AD_... — показы баннеров с нашим предложением на сайтах, где был пользователь
- SEARCH — показы в поисковой сети

```{r}
# создаем таблицу и
acc_net_type <- account  |> 
  reframe(
    across(where(is.numeric), sum),
    .by = AdNetworkType)  |> 
  mutate(
    Cost = round(Cost),
    wImp = round(WeightedImpressions),
    NetType = AdNetworkType,
    BR   = if_else(Bounces == 0 | Sessions == 0, 0, round(Bounces / Sessions * 100)),
    wCTR = if_else(Clicks == 0 | WeightedImpressions == 0, 0, round(Clicks / WeightedImpressions * 100, 2)),
    cpaFC = if_else(Cost == 0 | GoalsFC == 0, 0, round(Cost / GoalsFC)),
    cpaLC = if_else(Cost == 0 | GoalsLC == 0, 0, round(Cost / GoalsLC)),
    CPC   = if_else(Cost == 0 | Clicks == 0, 0, round(Cost / Clicks)),
    crFC  = if_else(Clicks == 0 | GoalsFC == 0, 0, round(GoalsFC / Clicks * 100, 2)),
    crLC  = if_else(Clicks == 0 | GoalsLC == 0, 0, round(GoalsLC / Clicks * 100, 2))
    ) |> 
  select(
    NetType,
    Cost,
    GoalsFC,
    GoalsLC,
    cpaFC,
    cpaLC,
    crFC,
    crLC,
    Clicks,
    CPC,
    wCTR,
    BR
  )
```


```{r}
# выводим как html
acc_net_type  |> 
  kbl(
    format = "html",
    caption = "Табилца: Сводка по всему аккаунту в разрезе мест показа"
  ) |> 
  kable_paper() |> 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive")) |> 
  row_spec(
    0,
    background = "#DBB9FA",
    color = "#5A5A5A",
    align = "r"
  ) |> 
  row_spec(
    1:length(acc_net_type$NetType),
    align = "r"
    )  |> 
  column_spec(
    1,
    border_right = T
  )
```



### Месяцы

```{r}
# создаем таблицу

acc_month <- account |> 
  reframe(round(across(where(is.numeric), sum)), 0, .by = Date) |> 
  mutate(Month = clock::date_format(Date, format = "%m-%y")) |> 
  reframe(across(where(is.numeric), sum), Days = n(), .by = Month) |> 
  mutate(
    Cost = round(Cost),
    wImp = round(WeightedImpressions),
    BR = if_else(Bounces == 0 | Sessions == 0, 0, round(Bounces / Sessions * 100)),
    wCTR = if_else(Clicks == 0 | WeightedImpressions == 0, 0, round(Clicks / WeightedImpressions * 100, 2)),
    cpaFC = if_else(Cost == 0 | GoalsFC == 0, 0, round(Cost / GoalsFC)),
    cpaLC = if_else(Cost == 0 | GoalsLC == 0, 0, round(Cost / GoalsLC)),
    CPC = if_else(Cost == 0 | Clicks == 0, 0, round(Cost / Clicks)),
    crFC = if_else(Clicks == 0 | GoalsFC == 0, 0, round(GoalsFC / Clicks * 100, 2)),
    crLC = if_else(Clicks == 0 | GoalsLC == 0, 0, round(GoalsLC / Clicks * 100, 2))
    ) |> 
  select(
    Month,
    Days,
    Cost,
    GoalsFC,
    GoalsLC,
    cpaFC,
    cpaLC,
    crFC,
    crLC,
    wImp,
    Clicks,
    CPC,
    wCTR,
    BR
    )
```


```{r}
# задаем стиль выбранных колонок пакет kableExtra

acc_month[, c(3, 4, 5)] <- lapply(
  acc_month[, c(3, 4, 5)],
  function(x) {
    cell_spec(x,
      color = "black",
      bold = F,
      background = spec_color(x,
        end = 0.9,
        option = "C",
        direction = -1,
        alpha = 0.4
      )
    )
  }
)

# создаем таблицу с помощью библиотеке DT
DT::datatable(
  acc_month,
  extensions = c(
    "Buttons",
    "ColReorder",
    "FixedHeader"
  ),
  escape = FALSE,
  class = "display compact nowrap",
  caption = htmltools::tags$caption(
    style = "caption-side: top; text-align: left; color: gray;",
    htmltools::h4("Таблица: Данные по месяцам")
    ),
  options = list(
    columnDefs = list(list(
      className = "dt-right",
      targets = 3:5
    )),
    pageLength = 10,
    dom = "Btpli",
    language = list(url = "//cdn.datatables.net/plug-ins/1.13.6/i18n/ru.json"),
    buttons = c("csv", "excel", "pdf"),
    colReorder = TRUE,
    fixedHeader = TRUE
    )
  )  |> 
  formatStyle("Clicks",
    background         = styleColorBar(acc_month$Clicks, "#C4D8F3"),
    backgroundSize     = "100% 90%",
    backgroundRepeat   = "no-repeat",
    backgroundPosition = "center"
  )

```

:::

## Графики

::: {.panel-tabset}


### Месяцы

```{r}
#| fig-cap: "График показов, кликов и целей в лог шкале по месяцам"

account  |> 
  mutate(Month = floor_date(Date, "month", week_start = 1)) |> 
  reframe(across(where(is.numeric), sum), .by = Month) |> 
  select(
    Month,
    WeightedImpressions,
    Clicks,
    GoalsLC
  ) |> 
  ggplot() +
  geom_area(
    mapping = aes(
      x = Month,
      y = WeightedImpressions,
      fill = "wImp"
      ),
    alpha = 0.5
    ) +
  geom_area(
    mapping = aes(
      x = Month,
      y = Clicks,
      fill = "Clicks"
      ), 
    alpha = 0.5
  ) +
  geom_area(
    mapping = aes(
      x = Month,
      y = GoalsLC,
      fill = "GoalsLC"
      )
    ) +
  scale_fill_manual(values = c("#00E5FF", "#B3FFFF", "#FF80FF")) +
  scale_x_date(date_breaks = "month", date_labels = "%b") +
  scale_y_log10(labels = label_number_auto()) +
  theme_minimal() +
  labs(
    x = NULL, 
    y = NULL
    ) +
  theme(
    legend.position = "top",
    legend.title = element_blank(),
    legend.text = element_text(size = 10, color = "gray50"),
    axis.title = element_text(size = 10, color = "gray40"),
    axis.text = element_text(size = 10, color = "gray40"),
    panel.grid = element_blank()
    )
```


### Недели

```{r}
#| fig-cap: "График показов, кликов и целей в лог шкале по неделям"

account |> 
  mutate(Week = floor_date(Date, "week", week_start = 1)) |> 
  reframe(
    across(where(is.numeric), sum), 
    .by = Week)  |> 
  ggplot() +
  geom_line(
    mapping = aes(
      x = Week, 
      y = WeightedImpressions, 
      color = "wImp"
      )) +
  geom_smooth(
    aes(
      x = Week, 
      y = WeightedImpressions
      ),
    formula = "y ~ x",
    method = "lm",
    se = FALSE,
    color = "#FF80FF",
    linetype = "dashed",
    linewidth = 0.1
  ) +
  geom_line(
    mapping = aes(
      x = Week, 
      y = Clicks, 
      color = "Clicks"
      )) +
  geom_smooth(
    aes(
      x = Week, 
      y = Clicks),
    formula = "y ~ x",
    method = "lm",
    se = FALSE,
    color = "#00E5FF",
    linetype = "dashed",
    linewidth = 0.1
    ) +
  geom_line(
    mapping = aes(
      x = Week, 
      y = GoalsLC, 
      color = "GoalsLC"
      )) +
  geom_smooth(
    aes(
      x = Week, 
      y = GoalsLC),
    formula = "y ~ x",
    method = "lm",
    se = FALSE,
    color = "#fc4526",
    linetype = "dashed",
    linewidth = 0.1
    ) +
  scale_color_manual(
    values = c(
      "#00E5FF", 
      "#fc4526", 
      "#FF80FF"
      )) +
  scale_x_date(
    date_breaks = "week", 
    date_labels = "%W") +
  scale_y_log10(labels = label_number_auto()) +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(
    legend.position = "top",
    legend.title = element_blank(),
    legend.text = element_text(size = 10, color = "gray50"),
    axis.title = element_text(size = 10, color = "gray40"),
    axis.text = element_text(size = 10, color = "gray40"),
    panel.grid = element_blank()
  )

```



### Дни

```{r}
#| fig-cap: "Тренд показов, кликов и целей в лог шкале по дням"

account %>%
  reframe(across(where(is.numeric), sum), .by = Date) %>%
  ggplot() +
  geom_line(mapping = aes(x = Date, y = WeightedImpressions, color = "wImp")) +
  geom_smooth(aes(x = Date, y = WeightedImpressions),
    method = "lm",
    se = FALSE,
    color = "#FF80FF",
    linetype = "dashed",
    linewidth = 0.1
  ) +
  geom_line(mapping = aes(x = Date, y = Clicks, color = "Clicks")) +
  geom_smooth(aes(x = Date, y = Clicks),
    method = "lm",
    se = FALSE,
    color = "#00E5FF",
    linetype = "dashed",
    linewidth = 0.1
  ) +
  geom_line(mapping = aes(x = Date, y = GoalsLC, color = "GoalsLC")) +
  geom_smooth(aes(x = Date, y = GoalsLC),
    method = "lm",
    se = FALSE,
    color = "#fc4526",
    linetype = "dashed",
    linewidth = 0.1
  ) +
  geom_vline(xintercept = as.Date("2023-07-24"), linetype = 2, color = "red") +
  geom_vline(xintercept = as.Date("2023-07-31"), linetype = 2, color = "red") +
  scale_color_manual(values = c("#00E5FF", "#fc4526", "#FF80FF")) +
  scale_x_date(date_breaks = "5 day", date_labels = "%d") +
  scale_y_log10() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(
    legend.position = "top",
    legend.title = element_blank(),
    legend.text = element_text(size = 10, color = "gray50"),
    axis.title = element_text(size = 10, color = "gray40"),
    axis.text = element_text(size = 10, color = "gray40"),
    panel.grid = element_blank()
  ) +
  geom_label_repel(
    aes(
      x = as.Date("2023-07-24"), y = 0,
      label = "24 Июль. \n Вкл «Макс. конверсий"
    ),
    stat = "unique",
    size = 2.5,
    color = "gray20",
    fill = "#FF80FF",
    arrow = arrow(unit(0, "npc")),
    box.padding = 3,
    label.padding = 0.5,
    direction = "y"
  ) +
  geom_label_repel(
    aes(
      x = as.Date("2023-07-31"), y = 0,
      label = "24 Июль. \n Вкл «Макс. кликов"
    ),
    stat = "unique",
    size = 2.5,
    color = "gray20",
    fill = "#FF80FF",
    # arrow = arrow(unit(0, "npc")),
    box.padding = 3,
    label.padding = 0.5,
    direction = "y"
  )

```


### 30 дней

```{r}
#| fig-cap: "График показов, кликов и целей за последние 30 дней"

account %>% 
  reframe(across(where(is.numeric), sum), .by = Date) %>% 
  filter(Date >= Sys.Date()-31) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Date, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Date, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Date, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Date, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_vline(xintercept = as.Date("2023-03-06"), linetype = 2, color = "red")+
  geom_vline(xintercept = as.Date("2023-06-08"), linetype = 2, color = "red")+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "day", date_labels = "%d")+
  scale_y_log10() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 7, color = "gray40"))

```


### 7 дней

```{r}
#| fig-cap: "График показов, кликов и целей за последние 7 дней"

account %>% 
  reframe(across(where(is.numeric), sum), .by = Date) %>% 
  filter(Date >= Sys.Date()-8) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Date, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Date, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Date, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Date, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_vline(xintercept = as.Date("2023-03-06"), linetype = 2, color = "red")+
  geom_vline(xintercept = as.Date("2023-06-08"), linetype = 2, color = "red")+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "day", date_labels = "%d %a")+
  scale_y_log10() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title    = element_blank(),
        legend.text     = element_text(size = 10, color = "gray50"),
        axis.title      = element_text(size = 10, color = "gray40"),
        axis.text       = element_text(size = 10, color = "gray40"))

```


:::

::::








