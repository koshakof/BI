---
title: "ПАТОР"
date: today
date-format:  D dddd MMM YYYY
editor_options: 
  chunk_output_type: console
execute:
  warning: false
  message: false
  error: false
  echo: false
  output: asis
---

```{r, include=FALSE}

# загрузка библиотек
library(ryandexdirect)
library(tidyverse)
library(scales)
library(kableExtra)
library(ggrepel)
library(reactable)

```


## Аккаунт

```{r, include = F, eval = F}

# запрос данных Директ API
acc_raw_data <- yadirGetReport(ReportType        = "CUSTOM_REPORT",
                               DateRangeType     = "CUSTOM_DATE",
                               DateFrom          = "2023-01-01",
                               DateTo            = Sys.Date()-1,
                               FieldNames        = c("Date",
                                                     "AdNetworkType",
                                                     "CampaignName",
                                                     "CampaignType",
                                                     "AdGroupName",
                                                     "WeightedImpressions",
                                                     "Clicks",
                                                     "Sessions",
                                                     "Bounces",
                                                     "Cost",
                                                     "Conversions"),
                               Goals             = c(159887155,
                                                     164651272,
                                                     260606526,
                                                     257351521,
                                                     260624184,
                                                     256237147),
                               AttributionModels = c("FCCD", "LYDCCD"),
                               IncludeVAT        = "NO", 
                               IncludeDiscount   = "NO",
                               AgencyAccount     = "platzkart.ru-e",
                               Login             = "e-16936198", 
                               TokenPath         = "~/GitHub/R/Projects/tech/tokens/direct_token")

vroom::vroom_write(x     = acc_raw_data, 
                   file  = "~/GitHub/R/Projects/pator/data/pator_yd_acc_raw_data.txt", 
                   delim  = ",",
                   append = FALSE)

```


```{r, include = F}


# загрузка данных
acc_raw_df <- vroom::vroom(file = "~/GitHub/R/Projects/pator/data/pator_yd_acc_raw_data.txt")


# подготовка данных к анализу
## задаем вектор имен
pator_names <- c("Calls_F",
                 "Calls_L",
                 "JS_Mes_F",
                 "JS_Mes_L",
                 "JS_Leads_F",
                 "JS_Leads_L",
                 "Forms_F",
                 "Forms_L",
                 "EMail_Click_F",
                 "EMail_Click_L",
                 "Email_Copy_F",
                 "Email_Copy_L")

## обработаем данные по целям
account <- acc_raw_df %>%
  mutate(across(c(11:ncol(.)), ~ ifelse(. == "--", 0, .)),
         across(c(11:ncol(.)), as.numeric)) %>%
  rename_at(vars(11:ncol(.)), ~ pator_names) %>%
  mutate(GoalsFC = rowSums(across(ends_with("_F"), ~abs(.x))),
         GoalsLC = rowSums(across(ends_with("_L"), ~abs(.x))))

```

:::: {.panel-tabset}

## Таблицы

::: {.panel-tabset}

### Сводка

```{r}

# создаем таблицу и выводим как html
account %>%
  reframe(across(where(is.numeric),sum)) %>% 
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  kbl(caption = "Таблица: Сводка по всему аккаунту", 
      align = "c") %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"), 
                fixed_thead = TRUE) %>% 
  row_spec(0, background = "#DBB9FA", color = "#5A5A5A")

```


### Места

- AD_... — показы баннеров с нашим предложением на сайтах, где был пользователь
- SEARCH — показы в поисковой сети

```{r}

# создаем таблицу и выводим как html
account %>%
  reframe(across(where(is.numeric),sum), .by = AdNetworkType) %>% 
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(AdNetworkType,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  kbl(format = "html",
      caption = "Табилца: Сводка по всему аккаунту в разрезе мест показа") %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive")) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A",
           align = "r") %>%
  row_spec(1:2,
           align = "r") %>%
  column_spec(1,
              border_right = T)

```


### Месяцы

```{r}

# создаем таблицу
acc_month <- account %>% 
  reframe(round(across(where(is.numeric), sum)), 0, .by = Date ) %>% 
  mutate(Month = clock::date_format(Date, format = "%m-%y")) %>%
  reframe(across(where(is.numeric), sum),
          Days = n(),
          .by = Month) %>% 
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(Month,
         Days,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`)

# задаем стиль выбранных колонок
acc_month[, c(3,4,5)] <- lapply(acc_month[, c(3,4,5)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                 })

# выводим как html
acc_month %>% 
  kbl(format = "html",
      escape = FALSE,
      caption = "Таблица: Сводка по месяцам", 
      align = "c") %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive")) %>% 
  column_spec(c(2,5), 
              border_right = TRUE) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A")


# rename("Рабочих дней РК"            = Days,
#          "Итого расход, руб"          = Cost,
#          "Обращений по атр FC"        = Goals_F,
#          "Стоимость FC"               = `CPA_F,₽`,
#          "Конверсия FC, %"            = `CR_F,%`,
#          "Обращений по атр LCYD"      = Goals_L,
#          "Стоимость LYCD"             = `CPA_L,₽`,
#          "Конверсия LYDC, %"          = `CR_L,%`,
#          "Взвешанные показы"          = wImpressions,
#          "Итого переходов"            = Clicks,
#          "Средняя цена перехода, руб" = `CPC,₽`,
#          "Взвешанный CRT, %"          = `wCTR,%`,
#          "Процент отказов, %"         = `BR,%`)


```


### Network

```{r}

acc_network <- account %>% 
  filter(AdNetworkType %in% "AD_NETWORK") %>% 
  reframe(round(across(where(is.numeric), sum)), 0, .by = c(Date, AdNetworkType)) %>% 
  mutate(Month = clock::date_format(Date, format = "%m-%y")) %>%
  reframe(across(where(is.numeric),sum),
          Days = round(n()),
          .by = c(Month, AdNetworkType)) %>% 
  mutate(NetType   = AdNetworkType,
         Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(Month,
         NetType,
         Days,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`)

# задаем стиль выбранных колонок
acc_network[, c(4,5,6)] <- lapply(acc_network[, c(4,5,6)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                   })

# выводим как html
acc_network %>% 
  kbl(format = "html",
      caption = "Таблица: Сводка по месяцам только в сетях (AD_NETWORK)", 
      align = "c",
      escape = F) %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"),
                full_width = F) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A",
           align = "r") %>%
  row_spec(1:length(acc_network$Month),
           align = "r") %>%
  column_spec(c(3,6),
              border_right = T)

```


### Search

```{r}

# создаем таблицу
acc_search <- account %>% 
  filter(AdNetworkType %in% "SEARCH") %>% 
  reframe(round(across(where(is.numeric), sum)), 0, .by = c(Date, AdNetworkType)) %>% 
  mutate(Month = clock::date_format(Date, format = "%m-%y")) %>%
  reframe(across(where(is.numeric),sum),
          Days = round(n()),
          .by = c(Month, AdNetworkType)) %>% 
  mutate(NetType   = AdNetworkType,
         Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(Month,
         NetType,
         Days,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`)

# задаем стили для выбранных колонок
acc_search[, c(4,5,6)] <- lapply(acc_search[, c(4,5,6)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                   })

# создаем html таблицу
acc_search %>% 
  kbl(format = "html",
      caption = "Таблица: Сводка по месяцам только на поиске (SEARCH)", 
      align = "c",
      escape = FALSE) %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"),
                full_width = F) %>% 
  column_spec(c(3, 6),
              border_right = T) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A") %>% 
  row_spec(1:length(acc_search$Month),
           align = "r") %>% 
  add_header_above(c(" " = 2, "Метрики" = 13), 
                   color = "gray", 
                   line = F,
                   background = "#E1EBF9") %>% 
  add_header_above(c(" " = 3, "Важные" = 7, "Синтетика" = 5), 
                   color = "gray", 
                   line = F,
                   background = c("#A4DDEF","#EDC8F5"))

```

:::

## Графики

::: {.panel-tabset}


### Месяцы

```{r}
#| fig-cap: "График показов, кликов и целей в лог шкале по месяцам"

account %>% 
  mutate(Month = floor_date(Date, "month", week_start = 1)) %>% 
  reframe(across(where(is.numeric), sum), .by = Month) %>% 
  select(Month, 
         WeightedImpressions,
         Clicks,
         GoalsLC) %>% 
  ggplot() +
  geom_area(mapping = aes(x = Month, 
                          y = WeightedImpressions, 
                          fill = "wImp"), alpha = 0.5)+
  geom_area(mapping = aes(x = Month, 
                          y = Clicks, 
                          fill = "Clicks"), alpha = 0.5)+
  geom_area(mapping = aes(x = Month, 
                          y = GoalsLC, 
                          fill = "GoalsLC"))+
  geom_vline(xintercept = as.Date("2023-03-06"), linetype = 2, color = "red")+
  geom_vline(xintercept = as.Date("2023-06-08"), linetype = 2, color = "red")+
  scale_fill_manual(values = c("#00E5FF","#B3FFFF","#FF80FF"))+
  scale_x_date(date_breaks = "month", date_labels = "%b")+
  scale_y_log10(labels = label_number_auto()) +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        panel.grid = element_blank())+
  geom_label_repel(aes(x = as.Date("2023-03-06"), y = 0,
                label = "06 Март. \n Недельный бюджет снижен на 20%"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 2)+
  geom_label_repel(aes(x = as.Date("2023-06-08"), y = 0,
                label = "08 июня. \n Повторное снижение еще на 20%"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 2)

```


### Недели

```{r}
#| fig-cap: "График показов, кликов и целей в лог шкале по неделям"

account %>% 
  mutate(Week = floor_date(Date, "week", week_start = 1)) %>% 
  reframe(across(where(is.numeric), sum), .by = Week) %>% 
  select(Week, 
         WeightedImpressions,
         Clicks,
         GoalsLC) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Week, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Week, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Week, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Week, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Week, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Week, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_vline(xintercept = as.Date("2023-03-06"), linetype = 2, color = "red")+
  geom_vline(xintercept = as.Date("2023-06-08"), linetype = 2, color = "red")+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "month", date_labels = "%b")+
  scale_y_log10(labels = label_number_auto()) +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        panel.grid = element_blank())+
  geom_label_repel(aes(x = as.Date("2023-03-06"), y = 0,
                label = "06 Март. \n Недельный бюджет снижен на 20%"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 2)+
  geom_label_repel(aes(x = as.Date("2023-06-08"), y = 0,
                label = "08 июня. \n Повторное снижение еще на 20%"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 2)

```


### Дни

```{r}
#| fig-cap: "Тренд показов, кликов и целей в лог шкале по дням"

account %>% 
  reframe(across(where(is.numeric), sum), .by = Date) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Date, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Date, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Date, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Date, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_vline(xintercept = as.Date("2023-03-06"), linetype = 2, color = "red")+
  geom_vline(xintercept = as.Date("2023-06-08"), linetype = 2, color = "red")+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "month", date_labels = "%b")+
  scale_y_log10() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        panel.grid = element_blank())+
  geom_label_repel(aes(x = as.Date("2023-03-06"), y = 0,
                label = "06 Март. \n Недельный бюджет снижен на 20%"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 2)+
  geom_label_repel(aes(x = as.Date("2023-06-08"), y = 0,
                label = "08 июня. \n Повторное снижение еще на 20%"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 2)

```


### Bar chart

```{r}
#| fig-cap: "График: показы, клики и целей в столбчатой диаграмме по неделям"

account %>% 
  mutate(Week = floor_date(Date, "week", week_start = 1)) %>% 
  reframe(across(where(is.numeric), sum), .by = Week) %>% 
  select(Week, 
         WeightedImpressions,
         Clicks,
         GoalsLC) %>%  
  ggplot() +
  geom_col(mapping = aes(x = Week, y = WeightedImpressions, fill = "wImp"))+
  geom_col(mapping = aes(x = Week, y = Clicks, fill = "Clicks"))+
  geom_col(mapping = aes(x = Week, y = GoalsLC, fill = "Goals"))+
  scale_fill_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "week", date_labels = "%W")+
  scale_y_log10(labels = label_number_auto())+
  theme_minimal()+
  labs(x = "Номер недели", 
       y = NULL)+
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        panel.grid = element_blank())+
  geom_label_repel(aes(x = as.Date("2023-03-06"), y = 0,
                label = "06 Март. \n Недельный бюджет снижен на 20%"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 2)+
  geom_label_repel(aes(x = as.Date("2023-06-08"), y = 0,
                label = "08 июня. \n Повторное снижение еще на 20%"),
            stat = "unique",
            size = 3, 
            color = "gray20",
            fill = "#FF80FF",
            arrow = arrow(unit(0.02, "npc")),
            box.padding = 2)

```


### 7 дней

```{r}
#| fig-cap: "График показов, кликов и целей за последние 7 дней"

account %>% 
  reframe(across(where(is.numeric), sum), .by = Date) %>% 
  filter(Date >= Sys.Date()-8) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Date, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Date, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Date, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Date, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_vline(xintercept = as.Date("2023-03-06"), linetype = 2, color = "red")+
  geom_vline(xintercept = as.Date("2023-06-08"), linetype = 2, color = "red")+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "day", date_labels = "%d %a")+
  scale_y_log10() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title    = element_blank(),
        legend.text     = element_text(size = 10, color = "gray50"),
        axis.title      = element_text(size = 10, color = "gray40"),
        axis.text       = element_text(size = 10, color = "gray40"))

```


### 30 дней

```{r}
#| fig-cap: "График показов, кликов и целей за последние 30 дней"

account %>% 
  reframe(across(where(is.numeric), sum), .by = Date) %>% 
  filter(Date >= Sys.Date()-31) %>% 
  ggplot() +
  geom_line(mapping = aes(x = Date, y = WeightedImpressions, color = "wImp"))+
  geom_smooth(aes(x = Date, y = WeightedImpressions), 
              method = "lm",
              se = FALSE,
              color = "#FF80FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = Clicks, color = "Clicks"))+
  geom_smooth(aes(x = Date, y = Clicks), 
              method = "lm",
              se = FALSE,
              color = "#00E5FF",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_line(mapping = aes(x = Date, y = GoalsLC, color = "GoalsLC"))+
  geom_smooth(aes(x = Date, y = GoalsLC), 
              method = "lm",
              se = FALSE,
              color = "#fc4526",
              linetype   = "dashed",
              linewidth  = 0.1)+
  geom_vline(xintercept = as.Date("2023-03-06"), linetype = 2, color = "red")+
  geom_vline(xintercept = as.Date("2023-06-08"), linetype = 2, color = "red")+
  scale_color_manual(values = c("#00E5FF","#fc4526","#FF80FF"))+
  scale_x_date(date_breaks = "day", date_labels = "%d")+
  scale_y_log10() +
  theme_minimal() +
  labs(x = NULL, y = NULL) +
  theme(legend.position = "top",
        legend.title = element_blank(),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 7, color = "gray40"))

```


:::

::::



## Рекламные кампаний

::: {.panel-tabset}

### РК



```{r}
account %>% 
  reframe(across(where(is.numeric), sum), .by = c(CampaignName, CampaignType)) %>%
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(CampaignType,
         CampaignName,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  arrange(desc(Cost)) %>% 
  kbl(caption = "Таблица: Срез по РК с начала года") %>%
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive")) %>% 
  row_spec(0, background = "#DBB9FA", color = "#5A5A5A")
  
  
```


### Месяцы

```{r}

camp_month <- account %>% 
  reframe(round(across(where(is.numeric), sum)), .by = c(Date, CampaignName)) %>% 
  mutate(Month = clock::date_format(Date, format = "%m-%y")) %>%
  reframe(round(across(where(is.numeric), sum)),
          Days = n(),
          .by = c(Month, CampaignName)) %>%
  mutate(Campaign  = CampaignName,
         Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(Month,
         Days,
         Campaign,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`)

# задаем стиль выбранных колонок
camp_month[, c(4,5,6)] <- lapply(camp_month[, c(4,5,6)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                   })

camp_month %>% 
  kbl(format = "html",
      caption = "Таблица: Сводка по месяцам только на поиске (SEARCH)",
      escape = F) %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"),
                full_width = F) %>% 
  row_spec(0, 
           background = "#DBB9FA", 
           color = "#5A5A5A",
           align = "r") %>%
  row_spec(1:length(camp_month$Month),
           align = "r") %>%
  column_spec(c(3,6),
              border_right = T)

```


### Группы

```{r}

camp_groups <- account %>% 
  reframe(round(across(where(is.numeric), sum)), 
          .by = c(CampaignName, AdGroupName, AdNetworkType)) %>%
  mutate(Campaign  = CampaignName,
         Group     = AdGroupName,
         NetType   = AdNetworkType,
         Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(Campaign,
         Group,
         NetType,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`)

# задаем стиль выбранных колонок
camp_groups[, c(4,5,6)] <- lapply(camp_groups[, c(4,5,6)], 
                                 function(x) {
                                   cell_spec(x, 
                                             color = "black", 
                                             bold = F,
                                             background = spec_color(x, 
                                                                     end = 0.9, 
                                                                     option = "C", 
                                                                     direction = -1,
                                                                     alpha = 0.4))
                                   })


camp_groups %>% 
  kbl(format = "html",
      caption = "Метрики по РК, группам, типу площадки",
      escape = F) %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"),
                full_width = F) %>% 
  row_spec(0, background = "#DBB9FA", color = "#5A5A5A",
           font_size = 16) %>% 
  row_spec(1:length(camp_groups$Campaign),
           align = "r",
           font_size = 14) %>%
  column_spec(c(3, 6),
              border_right = T)


```


:::




## Объявления

::: {.panel-tabset}

Рассмотрим данные по объявлениям из действущхи РК.

```{r, include = F, eval = F }


# запрос метрик по объявлениям
ads_raw_data <- yadirGetReport(ReportType        = "CUSTOM_REPORT",
                               DateRangeType     = "CUSTOM_DATE",
                               DateFrom          = "2023-01-01",
                               DateTo            = Sys.Date()-1,
                               FieldNames        = c("Date",
                                                     "AdNetworkType",
                                                     "CampaignName",
                                                     "AdFormat",
                                                     "Slot",
                                                     "WeightedImpressions",
                                                     "Clicks",
                                                     "Sessions",
                                                     "Bounces",
                                                     "Cost",
                                                     "Conversions"),
                               Goals             = c(159887155,
                                                     164651272,
                                                     260606526,
                                                     257351521,
                                                     260624184,
                                                     256237147),
                               AttributionModels = c("FCCD", "LYDCCD"),
                               IncludeVAT        = "NO", 
                               IncludeDiscount   = "NO",
                               AgencyAccount     = "platzkart.ru-e",
                               Login             = "e-16936198", 
                               TokenPath         = "~/GitHub/R/Projects/tech/tokens/direct_token")

vroom::vroom_write(x      = ads_raw_data, 
                   file   = "~/GitHub/R/Projects/pator/data/pator_yd_ads_raw_data.txt", 
                   delim  = ",",
                   append = FALSE)
```


```{r, include = F}

# загрузка данных
ads_raw_data <- vroom::vroom(file = "~/GitHub/R/Projects/pator/data/pator_yd_ads_raw_data.txt")


# подготовка данных к анализу
## задаем вектор имен
pator_names <- c("Calls_F",
                 "Calls_L",
                 "JS_Mes_F",
                 "JS_Mes_L",
                 "JS_Leads_F",
                 "JS_Leads_L",
                 "Forms_F",
                 "Forms_L",
                 "EMail_Click_F",
                 "EMail_Click_L",
                 "Email_Copy_F",
                 "Email_Copy_L")

## обработаем данные по целям
ads <- ads_raw_data %>%
  mutate(across(c(11:ncol(.)), ~ ifelse(. == "--", 0, .)),
         across(c(11:ncol(.)), as.numeric)) %>%
  rename_at(vars(11:ncol(.)), ~ pator_names) %>%
  mutate(GoalsFC = rowSums(across(ends_with("_F"), ~abs(.x))),
         GoalsLC = rowSums(across(ends_with("_L"), ~abs(.x))))

```


### Форматы

::: {layout-ncol=2}
```{r}
#| fig-cap: "Показы по типу формата объявлений за последние 30 дней"

ads %>% 
  filter(Date >= Sys.Date()-31) %>% 
  reframe(round(across(where(is.numeric), sum)), .by =c(CampaignName, AdFormat)) %>%
  ggplot()+
  geom_col(aes(x = CampaignName, y = WeightedImpressions, fill = AdFormat),
           position = "dodge")+
  scale_y_log10(labels = scales::number_format(big.mark = " "))+
  scale_fill_manual(values = c("#19a6b3","#f26c0d","#5e3894"))+
  theme_minimal()+
  theme(legend.position = "top",
        legend.title = element_text(size = 12, color = "gray50"),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        axis.text.x = element_text(angle = 90))+
  labs(x = "Кампании",
       y = "Показы")

```

```{r}
#| fig-cap: "Клики по типу формата за последние 30 дней"

ads %>% 
  filter(Date >= Sys.Date()-31) %>% 
  reframe(round(across(where(is.numeric), sum)), .by =c(CampaignName, AdFormat)) %>%
  ggplot()+
  geom_col(aes(x = CampaignName, y = Clicks, fill = AdFormat),
           position = "dodge")+
  scale_fill_manual(values = c("#19a6b3","#f26c0d","#5e3894"))+
  theme_minimal()+
  theme(legend.position = "top",
        legend.title = element_text(size = 12, color = "gray50"),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        axis.text.x = element_text(angle = 90))+
  labs(x = "Кампании",
       y = "Клики")

```

:::

```{r}

ads %>% 
  reframe(round(across(where(is.numeric), sum)), 
          .by = c(AdNetworkType, CampaignName, AdFormat)) %>%
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(CampaignName,
         AdNetworkType,
         AdFormat,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  arrange(CampaignName, desc(Cost)) %>% 
  kbl(caption = "Метрики по РК, площадкам и форматам") %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"), 
                fixed_thead = TRUE,
                font_size = 11) %>% 
  row_spec(0, background = "#DBB9FA", color = "#5A5A5A", font_size = 13)
  
```


### Слоты

::: {layout-ncol=2}

```{r}
#| fig-cap: "Показы объявлений в блоках"

ads %>% 
  filter(Date >= Sys.Date()-31) %>% 
  reframe(round(across(where(is.numeric), sum)), .by =c(CampaignName, Slot)) %>%
  ggplot()+
  geom_col(aes(x = CampaignName, y = WeightedImpressions, fill = Slot),
           position = "dodge")+
  scale_fill_manual(values = c("#19a6b3","#f26c0d","#5e3894", "#FF00FF"))+
  scale_y_log10(labels = scales::number_format(big.mark = " "))+
  labs(title = "Показы объявлений в блоках",
         x = NULL,
       y = "Imp")+
  theme_minimal()+
  theme(legend.position = "top",
        legend.title = element_text(size = 12, color = "gray50"),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        axis.text.x = element_text(angle = 90))+
  labs(x = "Кампании",
       y = "Показы")
```


```{r}
#| fig-cap: "Клики по объявлениям в блоках"

ads %>% 
  filter(Date >= Sys.Date()-31) %>% 
  reframe(round(across(where(is.numeric), sum)), .by =c(CampaignName, Slot)) %>%
 
  ggplot()+
  geom_col(aes(x = CampaignName, y = Clicks, fill = Slot),
           position = "dodge")+
  scale_fill_manual(values = c("#19a6b3","#f26c0d","#5e3894", "#FF00FF"))+
  labs(x = NULL,
       y = "Clicks")+
  theme_minimal()+
  theme(legend.position = "top",
        legend.title = element_text(size = 12, color = "gray50"),
        legend.text = element_text(size = 10, color = "gray50"),
        axis.title = element_text(size = 10, color = "gray40"),
        axis.text  = element_text(size = 10, color = "gray40"),
        axis.text.x = element_text(angle = 90))+
  labs(x = "Кампании",
       y = "Клики")


```


```{r}

ads %>% 
  reframe(round(across(where(is.numeric), sum)), 
          .by = c(AdNetworkType, CampaignName, Slot)) %>%
  mutate(Cost      = round(Cost),
         wImp      = round(WeightedImpressions),
         `BR,%`    = if_else(Bounces == 0| Sessions == 0, 0, 
                              round(Bounces / Sessions * 100)),
         `wCTR,%`  = if_else(Clicks == 0| WeightedImpressions == 0, 0, 
                                 round(Clicks / WeightedImpressions * 100, 2)),
         `cpaFC,₽` = if_else(Cost == 0| GoalsFC == 0, 0,
                                 round(Cost / GoalsFC)),
         `cpaLC,₽` = if_else(Cost == 0| GoalsLC == 0, 0,
                                 round(Cost / GoalsLC)),
         `CPC,₽`   = if_else(Cost == 0| Clicks == 0, 0,
                                 round(Cost / Clicks)),
         `crFC,%`  = if_else(Clicks == 0| GoalsFC == 0, 0,
                                 round(GoalsFC/ Clicks * 100, 2)),
         `crLC,%`  = if_else(Clicks == 0| GoalsLC == 0, 0,
                             round(GoalsLC / Clicks * 100, 2))) %>% 
  select(CampaignName,
         AdNetworkType,
         Slot,
         Cost,
         GoalsFC,
         GoalsLC,
         `cpaFC,₽`,
         `cpaLC,₽`,
         `crFC,%`,
         `crLC,%`,
         wImp,
         Clicks,
         `CPC,₽`,
         `wCTR,%`,
         `BR,%`) %>% 
  arrange(CampaignName, desc(Cost)) %>% 
  kbl(caption = "Метрики по РК, типу площадки и блоку показа объявления") %>% 
  kable_paper() %>% 
  kable_styling(bootstrap_options = c("hover", "condensed", "responsive"), 
                fixed_thead = TRUE,
                font_size = 11) %>% 
  row_spec(0, background = "#DBB9FA", color = "#5A5A5A", font_size = 13)
  

```

:::

:::






## Таргеты

Для поисковых РК
Скачать список кампаний
Отфильтровать те, которые имеют статус search
Применить фильтр к данным и вывести данные по поисковым запросам.



